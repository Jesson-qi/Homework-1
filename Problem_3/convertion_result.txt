    1  igit init
    2  cd /root/Desktop/host
    3  git init
    4  #!/bin/bash
    5  alias file_remove='function _file_remove() { 
    6    if [ -z "$1" ]; then
    7      echo "No directory name provided."
    8      return 1
    9    fi
   10    dir_path=$(find . -type d -name "$1" 2>/dev/null | head -n 1)
   11    if [ -z "$dir_path" ]; then
   12      echo "Error: No directory named $1 found in the current path."
   13      return 1
   14    fi
   15    rm -rf "$dir_path"/*
   16    echo "All files removed from $dir_path."
   17  }; _file_remove'
   18  file_remove test_1
   19  #!/bin/bash
   20  cd "P2/Problem1/electron_scattering_data/" || { echo "directory not found"; exit 1; }
   21  mkdir electron scattering data/odd/
   22  mkdir electron_scattering_data/odd
   23  mkdir "electron_scattering_data/odd"
   24  cd /root/Desktop/host
   25  #!/bin/bash
   26  cd /root/Desktop/host/PS1/P2/Problem1/electron_scattering_data || { echo "Directory not found!"; exit 1; }
   27  #!/bin/bash
   28  cd /root/Desktop/host/PS1/P2/Problem1/electron_scattering_data || { echo "Directory not found!"; exit 1; }
   29  #!/bin/bash
   30  cd /root/Desktop/host/PS1/P2/Problem1/electron_scattering_data || { echo "Directory not found!"; exit 1; }
   31  cd /root/Desktop/host
   32  git init
   33  #! /bin/bash
   34  cd /root/Desktop/host/PS1/P2/Problem1/electron_scattering_data || { echo "Directory not found!"; exit 1; }
   35  #!/bin/bash
   36  cd /root/Desktop/host/P2/Problem1/electron_scattering_data || { echo "Directory not found!"; exit 1; }
   37  /bin/bash
   38  mkdir -p odd even
   39  for file in *; do   index=$(echo "$file" | grep -oE 'index_[0-9]+' | grep -oE '[0-9]+')  ;   if [ -z "$index" ]; then     continue;   fi;   if (( index % 2 == 0 )); then     mv "$file" even/;   else     mv "$file" odd/;   fi; done
   40  git init
   41  cd /root/Desktop/host/
   42  /bin/bash
   43  cd /root/Desktop/host/P2/Problem1/electron_scattering_data || { echo "Directory not found!"; exit 1; }
   44  mkdir -p odd even
   45  for file in *; do   index=$(echo "$file" | grep -oE 'index_[0-9]+' | grep -oE '[0-9]+')  ;   if [ -z "$index" ]; then     continue;   fi;   if (( index % 2 == 0 )); then     mv "$file" even/;   else     mv "$file" odd/;   fi
   46  #!/bin/bash
   47  echo 1
   48  done
   49  cd /root/Desktop/host/
   50  cd /root/Desktop/host/P2/Problem1/electron_scattering_data || { echo "Directory not found!"; exit 1; }
   51  mkdir -p odd even
   52  for file in *; do   index=$(echo "$file" | grep -oE 'index_[0-9]+' | grep -oE '[0-9]+')  ;   if [ -z "$index" ]; then     continue;   fi;   if (( index % 2 == 0 )); then     mv "$file" even/;   else     mv "$file" odd/;   fi; done
   53  history >> history.txt
   54  cd /root/Desktop/host/
   55  git add .
   56  git checkout -b main
   57  git add .
   58  git commit -m "JessonQiHW1Q2"
   59  git config --global junhangqi
   60  git config --global user.name junhangqi
   61  git config --global user.email junhangqi@ucsb.edu
   62  git add .
   63  git commit -m "JessonQiHW1Q2"
   64  git remote add origin https://github.com/Jesson-qi/P2.git
   65  git push -u origin main
   66  git push -u origin P2
   67  git push https://github.com/Jesson-qi/P2.git main
   68  cd P2/
   69  git push https://github.com/Jesson-qi/P2.git main
   70  git remote add origin https://github.com/Jesson-qi/P2.git
   71  git remote -v
   72  git push -u  origin main
   73  git push  origin main
   74  git status
   75  git add .
   76  git commit -m "JunhangQiHW1Q2"
   77  git push -u origin main
   78  git init
   79  cd /root/Desktop/host/
   80  #! /bin/bash
   81  decimal_hex_bin(){  local decimal=$1;  local hex="";  local hex_table=("0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F");  local bin="";  while [ "$decimal" -gt 0]; do   remainder=$(($decimal %16));   hex="${hex_table[%remiander]}$hex";   decimal=$((decimal / 16));  done;  echo "$hex"; }
   82  decimal_hex_bin(16)
   83  decimal_hex_bin "16"
   84  #! /bin/bash
   85  decimal_to_hexadecimal() {     local decimal=$1;     local hex="";     local hex_table=("0" "1" "2" "3" "4" "5" "6" "7" "8" "9" "A" "B" "C" "D" "E" "F")     while [ "$decimal" -gt 0 ]; do         remainder=$((decimal % 16));         hex="${hex_table[$remainder]}$hex";         decimal=$((decimal / 16));     done     echo "$hex"; }
   86  # Test the function
   87  read -p "Enter a decimal number: " decimal_number
   88  echo "Hexadecimal: $hex_result"
   89  Enter a decimal number: 255
   90  decimal_to_hexadecimal(225)
   91  decimal_to_hexadecimal "225"
   92  git init
   93  cd /root/Desktop/hos
   94  cd /root/Desktop/host
   95  #!/bin/bash
   96  decimal_to_hexadecimal() {     local decimal=$1;     local hex="";     local hex_table=("0" "1" "2" "3" "4" "5" "6" "7" "8" "9" "A" "B" "C" "D" "E" "F");     local binary="";     local decimal_2=$1;     while [ "$decimal" -gt 0 ]; do         remainder=$((decimal % 16));         hex="${hex_table[$remainder]}$hex";         decimal=$((decimal / 16));     done     echo "$hex";     while [ "$decimal_2" -gt 0 ]; do         binary=$((decimal_2 % 2))$binary;         decimal_2=$((decimal_2 / 2));     done     echo "$binary"; }
   97  decimal_to_hexadecimal "225"
   98  mkdir Problem_3
   99  cd Problem_3
  100  history >> convertion_result.txt
